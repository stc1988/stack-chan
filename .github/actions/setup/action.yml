name: Setup
description: Setup Node.js, ModdableSDK and ESP-IDF environments
inputs:
  target-branch:
    description: "Target branch to setup environment"
    required: false
    default: ""
runs:
  using: composite
  steps:
    - uses: Kesin11/actions-timeline@v2
    - uses: actions/setup-node@v4
      with:
        node-version: 20
    - name: Cache node modules
      uses: actions/cache@v4
      env:
        cache-name: cache-node-modules
      with:
        path: ./firmware/node_modules
        key: ${{ runner.os }}-npm-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
    - run: npm ci
      working-directory: ./firmware
      shell: bash
    - name: check latest release tag of Moddable
      if: inputs.target-branch == ''
      run: |
        API_URL="https://api.github.com/repos/Moddable-OpenSource/moddable/releases"
        RESPONSE=$(curl -s $API_URL)
        LATEST_TAG_NAME=$(echo $RESPONSE | jq -r '.[0].tag_name')
        LATEST_TAG_ID=$(echo $RESPONSE | jq -r '.[0].id')
        echo "Latest release tag_name of Moddable: $LATEST_TAG_NAME (id:$LATEST_TAG_ID)"
        echo "moddable_cache_key=${{ runner.os }}-moddable-$LATEST_TAG_ID" >> $GITHUB_ENV
      shell: bash
    - name: Restore cache of Moddale and ESP32
      if: inputs.target-branch == ''
      id: restore-cache-moddable
      uses: actions/cache/restore@v4
      with:
        path: |
          /home/runner/.local/share
          /home/runner/.espressif
        key: ${{ env.moddable_cache_key }}
    - name: install Moddable
      if: steps.restore-cache-moddable.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        if [ -z "${{ inputs.target-branch }}" ]; then
          npm run setup
        else
          npm run setup -- --target-branch ${{ inputs.target-branch }}
        fi
      working-directory: ./firmware
      shell: bash
    - name: install ESP32
      if: steps.restore-cache-moddable.outputs.cache-hit != 'true'
      run: |
        sudo apt-get update
        source $HOME/.local/share/xs-dev-export.sh && npm run setup -- --device=esp32
      working-directory: ./firmware
      shell: bash
    - name: Save cache of Moddale and ESP32
      if: inputs.target-branch == '' && steps.restore-cache-moddable.outputs.cache-hit != 'true'
      id: save-cache-moddable
      uses: actions/cache/save@v4
      with:
        path: |
          /home/runner/.local/share
          /home/runner/.espressif
        key: ${{ env.moddable_cache_key }}
